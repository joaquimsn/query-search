<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github</groupId>
	<artifactId>querysearch</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Query Search</name>
	<description>Implementation for make search based in JPQL or SQL and result in object</description>

	<properties>
		<hibernate-entitymanager.version>5.1.0.Final</hibernate-entitymanager.version>
		<junit.version>4.12</junit.version>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven-compiler-plugin.version>3.6.1</maven-compiler-plugin.version>
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>
		<coveralls-maven-plugin.version>4.3.0</coveralls-maven-plugin.version>
		<jacoco-maven-plugin.version>0.7.9</jacoco-maven-plugin.version>
	</properties>
	
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/joaquimsn/query-search/issues</url>
	</issueManagement>
	<scm>
		<connection>scm:git:git://github.com/joaquimsn/query-search.git</connection>
		<developerConnection>scm:git:git@github.com:joaquimsn/query-search.git</developerConnection>
		<url>http://github.com/joaquimsn/query-search</url>
	</scm>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate-entitymanager.version}</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>

	<distributionManagement>
		<snapshotRepository>
			<id>sonatype-nexus-snapshots</id>
			<name>Sonatype Nexus snapshot repository</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>sonatype-nexus-staging</id>
			<name>Sonatype Nexus release repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>test</id>
			<build>
				<plugin>
					<!-- CODE COVERAGE -->
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
					<executions>
						<!-- Prepare execution with Surefire -->
						<execution>
							<id>pre-unit-test</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<propertyName>surefireArgLine</propertyName>
							</configuration>
						</execution>
						<!-- Generate report after tests are run -->
						<execution>
							<id>post-unit-test</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
					<!-- Specify classes to ignore in code coverage -->
					<configuration>
						<excludes>
							<exclude>**/test/**</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>${coveralls-maven-plugin.version}</version>
				</plugin>
			</build>
		</profile>
		
		<!-- Deploy to  Sonatype Nexus Repository (OSSRH) -->
		<profile>
			<id>release-sign</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-release-plugin</artifactId>
						<version>>${maven-release-plugin.version}</version>
						<configuration>
							<arguments>-Dgpg.passphrase=${gpg.passphrase}</arguments>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.4</version>
						<configuration>
							<passphrase>${gpg.passphrase}</passphrase>
						</configuration>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>